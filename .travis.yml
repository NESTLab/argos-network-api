language: cpp
jobs:
  include:
    #
    - os: linux
      name: Ubuntu 16.04
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - zip
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - PKG_BUILD="DEB"
        - PKG_EXT="deb"
    #
    - os: linux
      name: Ubuntu 18.04
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - zip
      env:
        - PKG_BUILD="DEB"
        - PKG_EXT="deb"
    #
    - os: osx
      name: Mac OSX
      osx_image: xcode10.1 # for CLANG 3.1
      env:
        - PKG_BUILD="ZIP"
        - PKG_EXT="pkg"
        # cache shares between builds
      before_cache:
        - brew cleanup
      cache:
        directories:
          # `cache: ccache: true` has no effect if `language:` is not `c` or `cpp`
          - $HOME/.ccache
          # https://stackoverflow.com/questions/39930171/cache-brew-builds-with-travis-ci
          - $HOME/Library/Caches/Homebrew
          - /usr/local/Homebrew/
before_install:
  - eval "${MATRIX_EVAL}"
install:
  ######################## Install using brew on OSX #########################
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then 
      brew tap ilpincy/argos3      ;
      brew install bash-completion ;
      brew unlink python@2         ;
      brew install argos3          ;
    fi
  ################### Download from Google drive for linux ###################
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then 
      wget --load-cookies /tmp/cookies.txt "https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1OVKPMZFa0GzSU1RwioaEReUCUl-vngkR' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1OVKPMZFa0GzSU1RwioaEReUCUl-vngkR" -O argos3_simulator-3.0.0-x86_64-beta56.deb && rm -rf /tmp/cookies.txt ;
      sudo apt-get install cmake libfreeimage-dev libfreeimageplus-dev qt5-default freeglut3-dev libxi-dev libxmu-dev liblua5.3-dev lua5.3 doxygen graphviz graphviz-dev asciidoc ;
      sudo dpkg -i argos3_simulator-3.0.0-x86_64-beta56.deb ;
    fi
before_script:
  - ${CXX} --version
  - ${CXX} -v
  
script:
  ############################################################################
  # Build main and tests
  ############################################################################
  - mkdir -p build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DARGOS_BUILD_NATIVE=ON  ../src 
  - cmake --build . --target all
  # Get filename variable from CMake
  - EXPORT_PACKAGE_NAME=$(cat package_name.txt)

  # New filename if linux
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then 
      EXPORT_FILE_NAME=${EXPORT_PACKAGE_NAME}-$(lsb_release -is)_$(lsb_release -sr).${PKG_EXT};
    fi
  # New filename if OSX
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then 
      EXPORT_FILE_NAME=${EXPORT_PACKAGE_NAME}-OSX.${PKG_EXT};
    fi
  
  # Build package
  - cpack -G ${PKG_BUILD}

  ## For OSX, convert zip output to pkg
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then 
    pkgbuild --root "./_CPack_Packages/Darwin/ZIP/${EXPORT_PACKAGE_NAME}" --identifier "com.argos3.plugins.webviz" --install-location "/" ${EXPORT_FILE_NAME} ;
  fi

  # Combine Client files into zip
  - cd .. && zip -r web_client.zip client
deploy:
  - provider: releases
    api_key: $GITHUB_OAUTH_ACCESS_TOKEN
    file:
      - "build/${EXPORT_FILE_NAME}"
      - web_client.zip
      - README.md
      - LICENSE
    skip_cleanup: true
    prerelease: true
    overwrite: true
    draft: true
  